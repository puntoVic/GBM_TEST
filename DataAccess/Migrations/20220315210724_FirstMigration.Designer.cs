// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220315210724_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Account", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cash")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Entities.Issuer", b =>
                {
                    b.Property<string>("Issuer_Name")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Issuer_Name");

                    b.ToTable("Issuers");

                    b.HasData(
                        new
                        {
                            Issuer_Name = "AAPL",
                            Value = 150
                        },
                        new
                        {
                            Issuer_Name = "MSFT",
                            Value = 276
                        },
                        new
                        {
                            Issuer_Name = "GOOG",
                            Value = 2532
                        },
                        new
                        {
                            Issuer_Name = "AMZN",
                            Value = 2845
                        },
                        new
                        {
                            Issuer_Name = "TSLA",
                            Value = 767
                        },
                        new
                        {
                            Issuer_Name = "NVDA",
                            Value = 213
                        },
                        new
                        {
                            Issuer_Name = "TSM",
                            Value = 99
                        },
                        new
                        {
                            Issuer_Name = "FB",
                            Value = 186
                        },
                        new
                        {
                            Issuer_Name = "UNH",
                            Value = 486
                        },
                        new
                        {
                            Issuer_Name = "JNJ",
                            Value = 171
                        });
                });

            modelBuilder.Entity("Entities.Stock", b =>
                {
                    b.Property<string>("StockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<long?>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<int>("Ammount")
                        .HasColumnType("int");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Issuer_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Issuer_Name1")
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("StockId");

                    b.HasIndex("AccountId");

                    b.HasIndex("Issuer_Name1");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("Entities.Transaction", b =>
                {
                    b.Property<string>("IdTransaction")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Issuer_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Issuer_Name1")
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Shares_Prices")
                        .HasColumnType("int");

                    b.Property<string>("Timestamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Total_Shares")
                        .HasColumnType("int");

                    b.Property<string>("TypeOperation")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("IdTransaction");

                    b.HasIndex("Issuer_Name1");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Entities.Stock", b =>
                {
                    b.HasOne("Entities.Account", "Account")
                        .WithMany("Stocks")
                        .HasForeignKey("AccountId");

                    b.HasOne("Entities.Issuer", "Issuer")
                        .WithMany("Stocks")
                        .HasForeignKey("Issuer_Name1");
                });

            modelBuilder.Entity("Entities.Transaction", b =>
                {
                    b.HasOne("Entities.Issuer", "Issuer")
                        .WithMany("Transactions")
                        .HasForeignKey("Issuer_Name1");
                });
#pragma warning restore 612, 618
        }
    }
}
